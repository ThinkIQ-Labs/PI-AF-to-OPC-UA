@using System.Xml.Serialization;
@inject IJSRuntime JS

<div>
    <textarea style="width:100%" rows="25" readonly>@xml</textarea>
</div>
<div>
    <button style="float:right" class="btn btn-secondary" @onclick="SaveXML">Save .xml</button>
</div>
@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Parameter] public AF afModel { get; set; }

    string? xml { get; set; }

    async Task<string> GetAfModelXml()
    {
        XmlSerializer xSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AF));
        TextWriter writer = new StringWriter();
        xSerializer.Serialize(writer, afModel);

        return writer.ToString();
    }

    async Task SaveXML()
    {
        //https://www.meziantou.net/generating-and-downloading-a-file-in-a-blazor-webassembly-application.htm
        // Generate a text file
        byte[] file = Encoding.UTF8.GetBytes(xml);
        await JS.InvokeVoidAsync("BlazorDownloadFile", "AfElementTemplates.xml", "text/plain", file);
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            xml = await GetAfModelXml();
            StateHasChanged();
        }
    }
}
